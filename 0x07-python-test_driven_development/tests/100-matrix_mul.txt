===================================
Test for ``100-matrix_mul`` module
===================================

Test case 1: import module 
>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

Test case 2: multiplication of two list
>>> matrix_mul([[1, 2, 3], [4, 5, 6]], [[7, 8], [9, 10], [11, 12]])
Traceback (most recent call last):
        ...
ValueError: m_a and m_b can't be multiplied

Test case 3: multipying two unequal list
>>> matrix_mul([[1, 2], [3, 4]], [[5, 6, 7], [8, 9, 10]])
Traceback (most recent call last):
	...
ValueError: m_a and m_b can't be multiplied

>>> matrix_mul([[1, 2, 3], [4, 5, 6]], [[7, 8, 9], [10, 11, 12]])
[[27, 30, 33], [78, 87, 96]]

>>> matrix_mul([[1, 2, 3], [4, 5, 6]], [[7], [8], [9]])
Traceback (most recent call last):
        ...
ValueError: m_a and m_b can't be multiplied

>>> matrix_mul([[1, 2], [3, 4]], [[5], [6]])
Traceback (most recent call last):
        ...
ValueError: m_a and m_b can't be multiplied

>>> matrix_mul([[1, 2, 3]], [[4, 5, 6], [7, 8, 9]])
[[18, 21, 24]]

>>> matrix_mul([[1, 2], [3, 4]], [[5, 6], [7, 8]])
[[19, 22], [43, 50]]

>>> matrix_mul([[1, 2, 3]], [[4], [5], [6]])
Traceback (most recent call last):
	...
ValueError: m_a and m_b can't be multiplied

>>> matrix_mul([[1, 2, 3]], 5)
Traceback (most recent call last):
	...
TypeError: m_b must be a list

>>> matrix_mul([[1, 2, 3]], [[4, 5, '6']])
Traceback (most recent call last):
	...
TypeError: m_b should contain only integers or floats
